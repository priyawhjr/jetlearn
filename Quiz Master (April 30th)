import pgzrun
TITLE = 'Quiz Master'
W = 800
H = 500
marquee_box = Rect(0,0,800,80)#(starting x, starting y, width, height)
question_box = Rect(20,90,500,130)
timer_box = Rect(530,90,130,130)
ans_box1 = Rect(20,250,230,130)
ans_box2 = Rect(270,250,230,130)
ans_box3 = Rect(20,400,230,130)
ans_box4 = Rect(270,400,230,130)
skip_box = Rect(530,250,130,300)


answer_boxes = [ans_box1, ans_box2, ans_box3, ans_box4]

#variables:
score = 0
time_left = 15
marquee_message =''
is_game_over = False

question_file = 'Quiz Master/questions.txt'
questions = []
question_count = 0
question_index = 0

def draw():
    screen.fill('black')
    screen.draw.filled_rect(marquee_box,'black')
    screen.draw.filled_rect(question_box,'magenta')
    screen.draw.filled_rect(timer_box, 'light blue')
    screen.draw.filled_rect(skip_box, 'green')



    for answer_box in answer_boxes:
        screen.draw.filled_rect(answer_box,'yellow')

#marquee box text:

    marquee_message = 'Welcome to Quiz-Master...'
    marquee_message += f'Q: {question_index} of {question_count}'
    screen.draw.textbox(marquee_message,marquee_box,color = 'white')

    #adding timer box
    screen.draw.textbox(str(time_left),timer_box,color = 'green',
                        shadow = (0.5,0.5),scolor = 'dim grey')
    
    #adding question box text
    screen.draw.textbox( question[0].strip(),question_box,color = 'yellow',shadow = (0.5,0.5),
                        scolor ='dim grey')
    
    #adding answer box text
    index = 1
    for answer_box in answer_boxes:
        screen.draw.textbox(question[index].strip(),answer_box,color = 'black')

        index = index + 1



def update():
    move_marquee()

def move_marquee():
    marquee_box.x -=2 
    if marquee_box.right< 0:
        marquee_box.left = W

def read_question_file():
    global question_count, questions
    q_file = open(question_file,'r')
    for question in q_file:
        questions.append(question)
        question_count +=1
    q_file.close()

def read_nextques():
    global question_index
    question_index += 1
    return questions.pop(0).split("|")

def on_mouse_down(pos):
  
    index = 1
    for box in answer_boxes:
        if box.collidepoint(pos):
            if index == int(question[5]):
              correct_answer()
            else:
              game_over()
        index += 1
    if skip_box.collidepoint(pos):
        skip_question()



def correct_answer():
    global score, time_left, questions, question
    score += 1
    if questions: #If questions = true (more questions left)
        question = read_nextques()
        time_left = 15
    else:
        game_over()




def game_over():
    global time_left,question,is_game_over
    message = f"Game over!\nYou got{score} questions correct!"
    time_left = 0
    is_game_over = True

def skip_question():
    global question, time_left
    if questions and not is_game_over:
        question = read_nextques()
        time_left = 15
    else:
        game_over()

def update_time_left():
    global time_left
    if time_left:
        time_left -= 1
    else:
        game_over()

read_question_file()
question = read_nextques()
clock.schedule_interval(update_time_left, 1)



    




pgzrun.go()
